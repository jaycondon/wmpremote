package josh.john.weeklymealplanner;

import android.support.v7.app.ActionBarActivity;
import android.support.v7.app.ActionBar;
import android.support.v4.app.Fragment;
import android.annotation.SuppressLint;
import android.content.Intent;
import android.database.Cursor;
import android.os.Bundle;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ListView;
import android.widget.SimpleCursorAdapter;
import android.widget.TextView;
import android.os.Build;

public class DisplayRecipe extends ActionBarActivity {

	ListView recipeListView;
	DatabaseHelper dbHandler;
	RecipeAdapter recipeAdapter;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_display_recipe);

		if (savedInstanceState == null) {
			getSupportFragmentManager().beginTransaction()
					.add(R.id.container, new PlaceholderFragment()).commit();
		}

		recipeListView = (ListView) findViewById(R.id.recipeList);
		dbHandler = new DatabaseHelper(this);

		recipePopulate();

		// This is to select the recipe in the listView
		// idea got from http://stackoverflow.com/questions/10277549/onitemclicklistener-listview
		recipeListView.setOnItemClickListener(new OnItemClickListener() {
			@Override
			// Actually selects the item and returns attributes belonging to that view
			public void onItemClick(AdapterView<?> listV, View v, int pos,
					long id) {
				// TODO Auto-generated method stub
				Log.d("Clicked item id", " " + id);

				// This starts up and returns the recipe id to the calling activity WMP
				// idea got from 
				// http://stackoverflow.com/questions/2497205/how-to-return-a-result-startactivityforresult-from-a-tabhost-activity
				String result = String.valueOf(id);
				Intent returnIntent = new Intent();
				returnIntent.putExtra("result", result);
				setResult(RESULT_OK, returnIntent);
				finish();
			}
		});
	}

	// This populates all the recipes to the screen to chose from
	public void recipePopulate() {
		Log.d("Inside recipePopulate", "Inside recipePopulate");

		Log.d("Before cursor", "Before cursor");

		//gets all the recipes and stores them in a cursor
		Cursor allRecipeCursor = dbHandler.getAllRecipes();

//		check if it works without variable cursor adapter
		
		Log.d("After allRecipes getting cursor",
				"After allRecipes getting cursor");
		
		// creates an adapter an then sets it to the list to link the database and
		// list together
		recipeAdapter = new RecipeAdapter(this, allRecipeCursor, false);
		recipeListView.setAdapter(recipeAdapter);
	}

	// All these below were generated by eclipse
	@Override
	public boolean onCreateOptionsMenu(Menu menu) {

		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.display_recipe, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// Handle action bar item clicks here. The action bar will
		// automatically handle clicks on the Home/Up button, so long
		// as you specify a parent activity in AndroidManifest.xml.
		int id = item.getItemId();
		if (id == R.id.action_settings) {
			return true;
		}
		return super.onOptionsItemSelected(item);
	}

	/**
	 * A placeholder fragment containing a simple view.
	 */
	public static class PlaceholderFragment extends Fragment {

		public PlaceholderFragment() {
		}

		@Override
		public View onCreateView(LayoutInflater inflater, ViewGroup container,
				Bundle savedInstanceState) {
			View rootView = inflater.inflate(R.layout.fragment_display_recipe,
					container, false);
			return rootView;
		}
	}

}
